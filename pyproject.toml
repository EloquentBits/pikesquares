[build-system]
requires = [
  "setuptools",
  "wheel",
]
build-backend = "setuptools.build_meta"

[project]

name = "pikesquares"
dynamic = [
  "dependencies",
]

version = "0.4.7"
description = ''
#readme = "README.md"
requires-python = ">=3.12"
keywords = []
authors = [
  { name = "Philip Kalinsky", email = "philip.kalinsky@eloquentbits.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
#dependencies = []
[project.scripts]
pikesquares = "pikesquares.cli.cli:app"

[project.urls]
Documentation = "https://github.com/EloquentBits/pikesquares#readme"
Issues = "https://github.com/EloquentBits/pikesquares/issues"
Source = "https://github.com/EloquentBits/pikesquares"

[tool.black]
target-version = ["py312"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py312"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["pikesquares"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["pikesquares", "tests"]
branch = true
parallel = true
omit = [
  "src/pikesquares/__about__.py",
]

[tool.coverage.paths]
pikesquares = ["src/pikesquares", "*/pikesquares/src/pikesquares"]
tests = ["tests", "*/pikesquares/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
major_version_zero = true
