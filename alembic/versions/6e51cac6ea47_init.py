import sqlmodel

"""init

Revision ID: 6e51cac6ea47
Revises: 
Create Date: 2025-04-06 14:19:45.721602

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6e51cac6ea47'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('device',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=36), nullable=False),
    sa.Column('run_as_uid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('run_as_gid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('service_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('uwsgi_config', sa.JSON(), nullable=True),
    sa.Column('uwsgi_plugins', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('data_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('log_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('config_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('run_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cert_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('machine_id', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('monitor_zmq_ip', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('monitor_zmq_port', sa.Integer(), nullable=True),
    sa.Column('enable_dir_monitor', sa.Boolean(), nullable=False),
    sa.Column('enable_zeromq_monitor', sa.Boolean(), nullable=False),
    sa.Column('enable_tuntap_router', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('machine_id'),
    sa.UniqueConstraint('service_id')
    )
    op.create_table('wsgiapp',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=36), nullable=False),
    sa.Column('run_as_uid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('run_as_gid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('service_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('uwsgi_config', sa.JSON(), nullable=True),
    sa.Column('uwsgi_plugins', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('data_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('log_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('config_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('run_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cert_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('root_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('pyvenv_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('wsgi_file', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('wsgi_module', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('workers', sa.Integer(), nullable=False),
    sa.Column('threads', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_id')
    )
    op.create_table('baserouter',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=36), nullable=False),
    sa.Column('run_as_uid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('run_as_gid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('service_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('uwsgi_config', sa.JSON(), nullable=True),
    sa.Column('uwsgi_plugins', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('data_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('log_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('config_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('run_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cert_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('subscription_server_address', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('device_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_id')
    )
    op.create_table('project',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=36), nullable=False),
    sa.Column('run_as_uid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('run_as_gid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('service_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('uwsgi_config', sa.JSON(), nullable=True),
    sa.Column('uwsgi_plugins', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('data_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('log_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('config_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('run_dir', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cert_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('device_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('monitor_zmq_ip', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('monitor_zmq_port', sa.Integer(), nullable=True),
    sa.Column('enable_dir_monitor', sa.Boolean(), nullable=False),
    sa.Column('enable_zeromq_monitor', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_id')
    )
    op.create_table('uwsgi_options',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=36), nullable=False),
    sa.Column('option_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('option_value', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('device_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sort_order_index', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('uwsgi_options')
    op.drop_table('project')
    op.drop_table('baserouter')
    op.drop_table('wsgiapp')
    op.drop_table('device')
    # ### end Alembic commands ###
