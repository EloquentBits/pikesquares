name: build-and-release-pikesquares

on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - '**'
    paths-ignore:
      - '**.md'
      - 'scripts/**'
      - 'tests/**'
      - '.github/workflows/**'
      - '!.github/workflows/build.yml'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

jobs:

  wheels:
    name: "${{ matrix.py }} ${{ matrix.os }} ${{ matrix.arch }} wheels"
    runs-on: ${{ matrix.runner }}
    env:
      MATRIX_ID: "${{ matrix.py }}-${{ matrix.os }}-${{ matrix.arch }}"

    strategy:
      matrix:
        include:
          - {"os": "ubuntu", "py": "cp311", "arch": "x86_64", "runner": "ubuntu-latest", "cibw_build": "cp311-manylinux_x86_64"}
          - {"os": "macos", "py": "cp311", "arch": "x86_64", "runner": "macos-latest", "cibw_build": "cp311-macosx_x86_64"}
          #- {"os": "macos", "py": "cp311", "arch": "arm64", "runner": "macos-latest-xlarge", "cibw_build": "cp311-macosx_arm64"}
      fail-fast: false

    env:
      CIBW_BUILD: "${{ matrix.cibw_build }}"
      CIBW_ARCHS: ${{ matrix.arch }}
      CIBW_BUILD_VERBOSITY: 5
      CIBW_ENVIRONMENT: APPEND_VERSION=".post0" UWSGI_PROFILE=pikesquares  # PATH=$PATH:"/usr/local/bin"
      CIBW_BEFORE_ALL: ./scripts/patch-uwsgi-packaging.sh uwsgi
      CIBW_BEFORE_BUILD_LINUX: yum install -y openssl-devel zlib-devel zeromq-devel libsqlite3x-devel.x86_64 pcre-devel jansson-devel 
      CIBW_BEFORE_BUILD_MACOS: IS_MACOS=1 ./scripts/pre_build.sh
      CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"

    steps:
      - name: install deps from homebrew
        if: ${{ matrix.os == 'macos' && matrix.arch == 'x86_64'}}
        shell: bash
        run: |
          brew install zeromq jansson pcre

      - name: install deps from homebrew
        if: ${{ matrix.os == 'macos' && matrix.arch == 'arm64'}}
        shell: bash
        run: |
          brew install zeromq jansson pcre autoconf libtool automake

      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install
        shell: bash
        run: |
          pip install 'cibuildwheel>=2.16.2' twine build

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.job }}-${{ matrix.arch }}-${{ matrix.py }}
          #save: ${{ github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb' }}

      - name: Build
        shell: bash
        run: |
          export DISTUTILS_C_COMPILER_LAUNCHER=ccache
          # TODO: Use ccache inside container, see https://github.com/pypa/cibuildwheel/issues/1030
          #if [[ "$GITHUB_REF" =~ ^refs/tags/v.+$ ]] ; then
          #  export CIBW_TEST_COMMAND='python -m pytest {project}/tests/fast/api/test_dbapi00.py  --verbose'
          #fi
          cibuildwheel --output-dir wheelhouse uwsgi
          ls wheelhouse

      #pikesquares_binary-0.3.22-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
      #- uses: actions/upload-artifact@v4
      #  if: false
      #  with:
      #    name: pikesquares-binary-cp311-manylinux_x86_64
      #    path: ./wheelhouse/*.whl
