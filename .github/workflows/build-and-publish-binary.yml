name: build-publish-multiplatform-binary-workflow

on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - '**'


jobs:
  build-and-publish-binary:
    strategy:
      matrix:
        platform: [ macos-latest-arm64 ] # macos-latest-large - intel, macos-latest-xlarge - apple silicon
        architecture: [ aarch64 ]
        python-version: [ "3.11", "3.12" ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install -U build pex


      - name: Build CLI wheel
        shell: bash
        run: |
          python -m build . --wheel

      - name: Build PEX
        shell: bash
        env:
          PEX_TOOLS: 1
        run: |
          pex -vvv \
            dist/pikesquares-* \
            -r requirements.txt \
            --venv \
            --include-tools \
            --python $(which python) \
            --entry-point pikesquares.cli.cli:app \
            --disable-cache \
            --no-emit-warnings \
            -o pikesquares-cli.pex
        
      - name: Build executable binary (science)
        shell: bash
        env:
          LATEST_SCIENCE_VERSION: "v0.3.0"
        run: |
          curl -Lo "/tmp/science" https://github.com/a-scie/lift/releases/download/${{ env.LATEST_SCIENCE_VERSION }}/science-${{ runner.os }}-${{ matrix.architecture }}
          chmod +x /tmp/science
          /tmp/science lift \
            --file pikesquares=pikesquares-cli.pex build \
            --use-platform-suffix \
            --hash sha256 \
            pikesquares.toml

      - name: Cache pikesquares binary for pkg installer job
        id: cache-pikesquares-binary-macos-save
        if: runner.os == 'macOS'
        uses: actions/cache/save@v3
        with:
          path: |
            pike-squares-macos-${{ matrix.architecture }}
          key: "cache-pikesquares-binary-macos-${{ matrix.architecture }}-key"

      - name: Publish binary to cdn - Linux
        shell: bash
        if: runner.os == 'Linux'
        env:
          PLATFORM: "linux"
        run: |
            curl --request PUT \
            --header 'AccessKey: ${{ secrets.CDN_ACCESS_TOKEN }}' \
            --header 'Content-Type: application/octet-stream' \
            --header 'accept: application/json'  \
            --data-binary @pike-squares-${{ env.PLATFORM }}-${{ matrix.architecture }} \
            https://${{ secrets.CDN_URL }}/${{ secrets.CDN_PROJECT_NAME }}/pikesquares-${{ env.PLATFORM }}-${{ matrix.architecture }}

      - name: Publish binary to cdn - Mac OS
        shell: bash
        if: runner.os == 'macOS'
        env:
          PLATFORM: "macos"
        run: |
            curl --request PUT \
            --header 'AccessKey: ${{ secrets.CDN_ACCESS_TOKEN }}' \
            --header 'Content-Type: application/octet-stream' \
            --header 'accept: application/json'  \
            --data-binary @pike-squares-${{ env.PLATFORM }}-${{ matrix.architecture }} \
            https://${{ secrets.CDN_URL }}/${{ secrets.CDN_PROJECT_NAME }}/pikesquares-${{ env.PLATFORM }}-${{ matrix.architecture }}
